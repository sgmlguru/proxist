<?xml-model href="http://localhost:8080/exist/rest/db/work/system/nvdl/xhtml-xforms.nvdl" type="application/xml" schematypens="http://purl.oclc.org/dsdl/nvdl/ns/structure/1.0"?><?xml-stylesheet href="http://localhost:8080/exist/rest/db/apps/xsltforms/xsltforms.xsl" type="text/xsl"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:my="test" xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <head>
        <title>Select Resource</title>
        <!--<link type="text/css" rel="stylesheet" href="http://localhost:8080/exist/rest/db/apps/style-sel.css"/>-->
        <xf:model id="facts">
            <!-- Temp data for ProX selections -->
            <xf:instance id="scratchpad">
                <data xmlns="">
                    <theprocess/>
                    <thepipeline/>
                    <thecmds/>
                    <booleanparams/>
                    <!--<list1params>
						<param/>
					</list1params>-->
                    <thepackages/>
                    <commonpackages/>
                </data>
            </xf:instance>
            
            <!-- Filter input selection -->
            <xf:instance id="filtered">
                <data xmlns="">
                    <filter/>
                    <texttype/>
                    <value/>
                </data>
            </xf:instance>
            
            <!-- Add eXist instance(s) -->
            <xf:instance id="exist-data" src="modules/list-resources.xq">
                <data xmlns="">
                    <item>
                        <string/>
                        <value/>
                    </item>
                </data>
            </xf:instance>
            
            
            
            <!-- Selected XML goes here -->
            <xf:instance id="publish-files">
                <data xmlns="">
                    <value/>
                </data>
            </xf:instance>
            
            
            
            <!-- ProX Stuff... -->
            
            <!-- Target for built process -->
            <xf:instance id="mytarget">
                <data xmlns="">
                    <processes form-id="prox-instance"/>
                </data>
            </xf:instance>
            
            <!-- Source ProX Blueprint -->
            <!-- @src points out proX blueprint. It is set by wrapper XProc script, 
				 based on the URL given in the resource map XML. -->
            <xf:instance src="http://localhost:8080/exist/rest/db/work/system/prox/xml/prox-blueprint.xml" id="mysource"/>
            
            
            
            <!-- URLs for returned xf:loads -->
            <xf:instance xmlns="" id="URL-container">
                <URL/>
            </xf:instance>
            
            
            
            <!-- Selection stuff... -->
            <xf:action ev:event="xforms-ready">
                <xf:setvalue ref="instance('publish-files')/data/value" value="'dummy-value'"/>
            </xf:action>
            
            
            <!-- Use bind with calculate to populate local item list using filter condition -->
            <xf:bind id="test" nodeset="instance('filtered')/item" calculate="instance('exist-data')/item[contains(string,instance('filtered')/filter)]"/>
            
            <!-- Generates resource map for selected root, modules and standard ProX resources -->
            <xf:submission id="select" method="post" replace="none" action="modules/generate-resmap.xq" ref="instance('publish-files')">
                <xf:action ev:event="xforms-submit-done">
                    <xf:message>Input selected and resource map generated</xf:message>
                </xf:action>
                <xf:action ev:event="xforms-submit-error">
                    <xf:message>Input selection failed</xf:message>
                </xf:action>
                <xf:recalculate/>
            </xf:submission>
            
            
            <!-- ProX stuff... -->
            <!-- Set the list defaults to be first values in the ProX instance.
			     If saved without a well-defined instance, the generated child
			     process will fail. -->
            <xf:action ev:event="xforms-ready">
                <xf:setvalue ref="theprocess" value="instance('mysource')/process[1]/@id"/>
                <xf:setvalue ref="thepipeline" value="instance('mysource')/process[1]/pipelines/pipeline[1]/@id"/>
                <xf:setvalue ref="thecmds" value="instance('mysource')/process[1]/pipelines/pipeline[1]/cmdlines/cmdline[1]/@id"/>
                <xf:setvalue ref="thepackages"/>
                <xf:setvalue ref="commonpackages" value="instance('mysource')/processes/packages"/>
            </xf:action>
            
            
            
            <!-- Save the configured ProX instance -->
            <!-- Instance name listed in @action, set by wrapper XProc,
				 based on the URL in the resource map XML. -->
            <xf:submission ref="instance('mytarget')/processes" replace="instance" encoding="utf-8" method="post" validate="false" resource="modules/save.xq" id="save" instance="mytarget"><!--  serialization="application/octet-stream" -->
                <xf:action ev:event="xforms-submit-done">
                    <xf:message>Child process ran normally </xf:message>
                </xf:action>
                <xf:action ev:event="xforms-submit-error">
                    <xf:message>Child process failed</xf:message>
                </xf:action>
            </xf:submission>
        </xf:model>
    </head>
    <body>
        
        <!-- ProX Forms Follow... -->
        <h2>Input Selection and Process Configuration</h2>
        <table>
            <tr>
                <td>
                    <fieldset>
                        <legend>Select input XML</legend>
                        <xf:group appearance="full">
                            <!-- Filter condition, add to filter instance in model -->
                            <div class="block-form">
                                <xf:input incremental="true" model="facts" ref="instance('filtered')/filter" appearance="compact">
                                    <xf:label>Filter</xf:label>
                                    <xf:hint>Filter the list using freetext search</xf:hint>
                                </xf:input>
                            </div>
                        </xf:group>
                    </fieldset>
                </td>
                <td>
                    <fieldset>
                        <legend>&#160;</legend>
                        <xf:group appearance="full">
                            <!-- Type of resource -->
                            <div class="block-form">
                                <xf:select1 ref="instance('filtered')/texttype">
                                    <xf:label>Select resource type</xf:label>
                                    <xf:hint>Filters resources according to type</xf:hint>
                                    <xf:item>
                                        <xf:label>All</xf:label>
                                        <xf:value/>
                                    </xf:item>
                                    <xf:item>
                                        <xf:label>Root XML</xf:label>
                                        <xf:value>root</xf:value>
                                    </xf:item>
                                    <xf:item>
                                        <xf:label>XML modules</xf:label>
                                        <xf:value>xmlmodules</xf:value>
                                    </xf:item>
                                    <xf:item>
                                        <xf:label>Other</xf:label>
                                        <xf:value>other</xf:value>
                                    </xf:item>
                                </xf:select1>
                            </div>
                        </xf:group>
                    </fieldset>
                </td>
                <td>
                    <fieldset>
                        <legend>&#160;</legend>
                        <xf:group appearance="full">
                            <!-- Filtered item list, add to item instance in model (too expensive to fetch from eXist?) -->
                            <div class="block-form">
                                <xf:select1 model="facts" appearance="minimal" incremental="true" ref="instance('publish-files')/value" id="fact-list">
                                    <xf:label>Select resource</xf:label>
                                    <xf:hint>Select resource</xf:hint>
                                    <xf:itemset model="facts" nodeset="instance('exist-data')/item[contains(lower-case(string),lower-case(instance('filtered')/filter)) and                             contains(type,instance('filtered')/texttype)]">
                                        <xf:label ref="string"/>
                                        <xf:value ref="value"/>
                                    </xf:itemset>
                                </xf:select1>
                            </div>
                        </xf:group>
                    </fieldset>
                </td>
            </tr>
            <tr>
                <td>
                    <xf:trigger>
                        <xf:label>Generate resource map</xf:label>
                        <xf:hint>Processes selected input XML and generates a resource map XML file</xf:hint>
                        <xf:action ev:event="DOMActivate">
                            <xf:send submission="select"/>
                        </xf:action>
                    </xf:trigger>
                </td>
                <td/>
                <td/>
            </tr>
            <tr>
                <td>
                    <!-- Process -->
                    <fieldset>
                        <legend>Configure Process</legend>
                        <div class="block-form">
                            <xf:select1 appearance="compact" incremental="false" ref="theprocess">
                                <xf:label>Process</xf:label>
                                <xf:item id="item-proc-dummy">
                                    <xf:label>Select a process</xf:label>
                                    <xf:value>Nothing</xf:value>
                                </xf:item>
                                <xf:itemset id="item-proc" nodeset="instance('mysource')/process">
                                    <xf:label ref="./metadata/title"/>
                                    <xf:value ref="./@id"/>
                                </xf:itemset>
                                <xf:help id="help-proc">
                                    <xf:output value="instance('mysource')/process[@id=instance('scratchpad')/theprocess]/metadata/description/p"/>
                                </xf:help>
                                <xf:setvalue ref="../thepipeline" ev:event="DOMFocusIn" value="'Nothing'"/>
                            </xf:select1>
                        </div>
                    </fieldset>
                </td>
                <td>
                    <!-- Pipeline -->
                    <fieldset>
                        <legend>&#160;</legend>
                        <div class=" block-form">
                            <xf:select1 appearance="compact" incremental="false" ref="thepipeline" id="id-pipe">
                                <xf:label>Pipeline</xf:label>
                                <xf:item id="item-pipe-dummy">
                                    <xf:label>Select a pipeline</xf:label>
                                    <xf:value>Nothing</xf:value>
                                </xf:item>
                                <xf:itemset id="item-pipe" nodeset="instance('mysource')/process[@id = instance('scratchpad')/theprocess]/pipelines/pipeline">
                                    <xf:label ref="./metadata/title"/>
                                    <xf:value ref="@id"/>
                                </xf:itemset>
                                <xf:help id="help-pipe">
                                    <xf:output value="instance('mysource')/process[@id = instance('scratchpad')/theprocess]/pipelines/pipeline[@id=instance('scratchpad')/thepipeline]/metadata/description/p"/>
                                </xf:help>
                                <xf:setvalue ref="../thecmds" ev:event="DOMFocusIn" value="'Nothing'"/>
                            </xf:select1>
                        </div>
                    </fieldset>
                </td>
                <td>
                    <!-- Commands -->
                    <fieldset>
                        <legend>&#160;</legend>
                        <div class="block-form">
                            <xf:select1 appearance="compact" incremental="false" ref="thecmds" id="id-cmd">
                                <xf:label>Output</xf:label>
                                <xf:item id="item-cmd-dummy">
                                    <xf:label>Select output options</xf:label>
                                    <xf:value>Nothing</xf:value>
                                </xf:item>
                                <xf:itemset id="item-cmd" nodeset="instance('mysource')/process[@id = instance('scratchpad')/theprocess]/pipelines/pipeline[@id = instance('scratchpad')/thepipeline]/cmdlines/cmdline">
                                    <xf:label ref="metadata/title"/>
                                    <xf:value ref="@id"/>
                                </xf:itemset>
                                <xf:help id="help-cmd">
                                    <xf:output value="instance('mysource')/process[@id = instance('scratchpad')/theprocess]/pipelines/pipeline[@id=instance('scratchpad')/thepipeline]/cmdlines/cmdline[@id=instance('scratchpad')/thecmds]/metadata/description/p"/>
                                </xf:help>
                            </xf:select1>
                        </div>
                    </fieldset>
                </td>
            </tr>
            <!--<tr>
                <td>
                    
                </td>
                <td>
                    
                </td>
                <td>
                    <fieldset>
                        <legend>Params</legend>
                        <!-\- Check box params -\->
                        <div class="block-form">
                            <xf:select appearance="full" incremental="true" ref="booleanparams">
                                <xf:label/>
                                <!-\-<xf:item>
									<xf:label>No params selected</xf:label>
									<xf:value>Nothing</xf:value>
								</xf:item>-\->
                                <xf:itemset nodeset="instance('mysource')/process[@id = instance('scratchpad')/theprocess]//pipeline[@id = instance('scratchpad')/thepipeline]//cmdline[@id=instance('scratchpad')/thecmds]//param[@choice='yes' and @ctype='boolean']">
                                    <xf:label ref="name"/>
                                    <xf:value ref="@id"/>
                                </xf:itemset>
                            </xf:select>
                        </div>
                    </fieldset>
                </td>
            </tr>-->
            <tr>
                <td class="debug">
                    <!-- @id -->
                    <xf:output ref="instance('mysource')//process[@id=instance('scratchpad')/theprocess]/metadata/title">
                        <xf:label>Selected: </xf:label>
                    </xf:output>
                </td>
                <td class="debug">
                    <xf:output ref="instance('mysource')//pipeline[@id=instance('scratchpad')/thepipeline]/metadata/title">
                        <xf:label>Selected: </xf:label>
                    </xf:output>
                </td>
                <td class="debug">
                    <xf:output ref="instance('mysource')//cmdline[@id=instance('scratchpad')/thecmds]/metadata/title">
                        <xf:label>Selected: </xf:label>
                    </xf:output>
                </td>
            </tr>
        </table>
        <xf:trigger>
            <xf:label>Save and run process</xf:label>
            <xf:hint>Saves the configured process and runs it on the selected input document</xf:hint>
            <xf:action ev:event="DOMActivate">
                <xf:delete nodeset="instance('mytarget')/processes/process"/>
                <xf:delete nodeset="instance('mytarget')/processes/packages"/>
                <xf:insert context="instance('mytarget')/processes" origin="instance('mysource')/process[@id = instance('scratchpad')/theprocess]"/>
                <xf:insert context="instance('mytarget')/processes" origin="instance('mysource')/packages" if="instance('mysource')/packages"/>
                <xf:delete nodeset="instance('mytarget')/processes/process[1]/pipelines/pipeline[@id != instance('scratchpad')/thepipeline]"/>
                <xf:delete nodeset="instance('mytarget')/processes/process[1]/pipelines/pipeline[1]/cmdlines/cmdline[@id != instance('scratchpad')/thecmds]"/>
                <xf:send submission="save"/>
            </xf:action>
            <!--<xf:action ev:event="DOMActivate">
                <xf:setvalue ref="instance('URL-container')" value="'http://www.sgmlguru.org'"/>
                <xf:load ref="instance('URL-container')"/>
            </xf:action>-->
        </xf:trigger>
        
        <!--<!-\- Test of xf:load -\->
        <xf:trigger appearance="minimal">
            <xf:label>Download here</xf:label>
            <xf:action ev:event="xforms-submit-done">
                <!-\-<xf:setvalue ref="instance('URL-container')" value="instance('mytarget')//message"/>-\->
                <xf:load ref="instance('mytarget')//message"/>
            </xf:action>
        </xf:trigger> -->
        
        <!-- Output messages -->
        <xf:group ref="instance('mytarget')/.[@code='200']">
            <div class="success">
                <!--<xf:output ref="instance('mytarget')//message"/>-->
                <!-- Test of xf:load -->
                <xf:trigger appearance="minimal">
                    <xf:label><xf:output ref="instance('mytarget')//message"/></xf:label>
                    <xf:action ev:event="DOMActivate">
                        <!--<xf:setvalue ref="instance('URL-container')" value="instance('mytarget')//message"/>-->
                        <xf:load ref="instance('mytarget')//message"/>
                    </xf:action>
                </xf:trigger> 
            </div>
        </xf:group>
        <xf:group ref="instance('mytarget')/.[@code='400']">
            <div class="failure">
                <xf:output ref="instance('mytarget')//message"/>
            </div>
        </xf:group>
        <hr/>
        
        
        <!-- Debug only -->
        <!--<p class="code">
            <xf:output value="serialize(instance('publish-files'),'yes')"/>
        </p>
        <p class="code">
            <xf:output value="serialize(instance('mytarget'),'yes')"/>
        </p>
        <div/>
        <p class="code">
            <xf:output value="serialize(instance('scratchpad'),'yes')">
                <xf:label>Scratchpad Contents </xf:label>
            </xf:output>
        </p>-->
    </body>
</html>